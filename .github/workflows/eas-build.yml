# on:
#   push:
#     branches:
#       - main
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: 🏗 Setup repo
#         uses: actions/checkout@v3

#       - name: 🏗 Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18.x
#           cache: npm

#       - name: 🏗 Setup EAS
#         uses: expo/expo-github-action@v8
#         with:
#           eas-version: latest
#           token: ${{ secrets.EXPO_TOKEN }}

#       - name: 📦 Install dependencies
#         run: npm install

#       - name: 🚀 Build app
#         run: eas build --platform all --non-interactive

# on:
#   push:
#     branches:
#       - main # This triggers the workflow only when changes are pushed to the 'main' branch
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: 🏗 Setup repo
#         uses: actions/checkout@v3

#       - name: 🏗 Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18.x
#           cache: npm

#       - name: 🏗 Setup EAS
#         uses: expo/expo-github-action@v8
#         with:
#           eas-version: latest
#           token: ${{ secrets.EXPO_TOKEN }}

#       - name: 📦 Install dependencies
#         run: npm install

#       - name: 🚀 Build app
#         run: eas build --platform android --profile production --clear-cache --non-interactive

# on:
#   push:
#     branches:
#       - main
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: 🏗 Setup repo
#         uses: actions/checkout@v3

#       - name: 🏗 Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18.x
#           cache: npm

#       - name: 🏗 Setup EAS
#         uses: expo/expo-github-action@v8
#         with:
#           eas-version: latest
#           token: ${{ secrets.EXPO_TOKEN }}

#       - name: 📦 Install dependencies
#         run: npm install

#       - name: 🚀 Build app
#         run: eas build --platform all --profile production --clear-cache --non-interactive

#       - name: Install jq
#         run: sudo apt-get install jq

#       - name: 🔄 Bump version
#         run: |
#           NEW_VERSION=$(npm version patch --no-git-tag-version) # Increment the patch version
#           jq --arg version "$NEW_VERSION" '.expo.version = $version' app.json > temp.json && mv temp.json app.json
#           git config --local user.email "actions@github.com"
#           git config --local user.name "GitHub Action"
#           git add app.json
#           git commit -m "chore: bump version to $NEW_VERSION"
#           git push

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v3

      - name: 🏗 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm

      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 📦 Install dependencies
        run: npm install

      # - name: 🚀 Build app
      #   run: eas build --platform android --profile production --clear-cache --non-interactive

      # - name: Install jq
      #   run: sudo apt-get install jq

      # - name: 🔄 Bump version and versionCode
      #   env:
      #     PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      #   run: |
      #     NEW_VERSION=$(npm version patch --no-git-tag-version) # Increment the patch version
      #     jq --arg version "$NEW_VERSION" '.expo.version = $version' app.json > temp.json && mv temp.json app.json

      #     CURRENT_VERSION_CODE=$(jq '.expo.android.versionCode' app.json)
      #     NEW_VERSION_CODE=$((CURRENT_VERSION_CODE + 1)) # Increment the versionCode
      #     jq --argjson versionCode "$NEW_VERSION_CODE" '.expo.android.versionCode = $versionCode' app.json > temp.json && mv temp.json app.json

      #     git config --local user.email "actions@github.com"
      #     git config --local user.name "GitHub Action"
      #     git add app.json
      #     git commit -m "chore: bump version to $NEW_VERSION and versionCode to $NEW_VERSION_CODE"
      #     git push https://PAT_TOKEN@github.com/almustarik/rn-deliveroo-clone.git

      - name: 🔄 Bump versionCode using Node.js
        run: |
          node -e "
          const fs = require('fs');
          const appJson = require('./app.json');

          // Increment the versionCode
          appJson.expo.android.versionCode += 1;

          fs.writeFileSync('app.json', JSON.stringify(appJson, null, 2));
          "

          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Action"
          git add app.json
          git commit -m "chore: bump versionCode to $(cat app.json | grep '\"versionCode\":' | awk '{print $2}' | tr -d ',')"
          git push
